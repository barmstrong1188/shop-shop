{"version":3,"sources":["assets/spinner.gif","utils/helpers.js","components/ProductItem/index.js","utils/actions.js","utils/queries.js","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","utils/reducers.js","utils/store.js","pages/Success.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","ProductItem","item","dispatch","useDispatch","state","useSelector","image","name","price","quantity","cart","React","createElement","className","Link","to","concat","alt","src","count","pluralize","onClick","itemInCart","find","cartItem","type","purchaseQuantity","parseInt","_objectSpread","product","QUERY_PRODUCTS","gql","_templateObject","_taggedTemplateLiteral","QUERY_CATEGORIES","_templateObject2","_templateObject3","QUERY_USER","_templateObject4","QUERY_CHECKOUT","_templateObject5","ProductList","currentCategory","_useQuery","useQuery","loading","data","useEffect","products","forEach","then","length","filter","category","map","key","spinner","CategoryMenu","categories","categoryData","id","CartItem","_ref","placeholder","value","onChange","target","role","aria-label","removeFromCart","AuthService","_classCallCheck","_createClass","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","_regeneratorRuntime","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","__await","callInvokeWithMethodAndArg","Error","done","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","stripePromise","loadStripe","Cart","_useLazyQuery","useLazyQuery","_useLazyQuery2","_slicedToArray","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","_getCart","_asyncToGenerator","_callee","_context","_toConsumableArray","apply","arguments","getCart","cartOpen","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","variables","Home","Detail","useParams","_useState","useState","_useState2","currentProduct","setCurrentProduct","indexedProducts","Fragment","description","disabled","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","props","email","password","formState","setFormState","_useMutation","useMutation","_useMutation2","login","error","handleFormSubmit","event","mutationResponse","preventDefault","t0","_x","handleChange","_event$target","_defineProperty","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","initialState","reducers","undefined","action","newState","createStore","Success","addOrder","_saveOrder","_yield$addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","client","ApolloClient","operation","setContext","headers","authorization","uri","App","ApolloProvider","Router","Provider","Switch","Route","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9cdf427e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.ab497855.gif\";","export function pluralize(name, count) {\n  if (count === 1) {\n    return name\n  }\n  return name + 's'\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    // open connection to the database `shop-shop` with the version of 1\n    const request = window.indexedDB.open('shop-shop', 1);\n\n    // create variables to hold reference to the database, transaction (tx), and object store\n    let db, tx, store;\n\n    // if version has changed (or if this is the first time using the database), run this method and create the three object stores \n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      // create object store for each type of data and set \"primary\" key index to be the `_id` of the data\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    // handle any errors with connecting\n    request.onerror = function(e) {\n      console.log('Oops! Something went wrong :(');\n    };\n    // on database open success\n    request.onsuccess = function(e) {\n      // save a reference of the database to the `db` variable\n      db = request.result;\n      // open a transaction do whatever we pass into `storeName` (must match one of the object store names)\n      tx = db.transaction(storeName, 'readwrite');\n      // save a reference to that object store\n      store = tx.objectStore(storeName);\n\n      // if there's any errors, let us know\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n      \n      // when the transaction is complete, close the connection\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n\n      });\n    }","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n const dispatch = useDispatch();\n const state = useSelector(state => state);\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\nexport const ADD_TO_CART = 'ADD_TO_CART';\nexport const ADD_MULTIPLE_TO_CART = 'ADD_MULTIPLE_TO_CART';\nexport const REMOVE_FROM_CART = 'REMOVE_FROM_CART';\nexport const UPDATE_CART_QUANTITY = 'UPDATE_CART_QUANTITY';\nexport const CLEAR_CART = 'CLEAR_CART';\nexport const TOGGLE_CART = 'TOGGLE_CART';","import gql from 'graphql-tag';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n{\n  categories {\n    _id\n    name\n  }\n}\n`;\n\nexport const QUERY_USER = gql`\n{\n  user {\n    firstName\n    lastName\n    orders {\n      _id\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        image\n      }\n    }\n  }\n}\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;","import React, { useEffect } from \"react\";\nimport ProductItem from \"../ProductItem\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UPDATE_PRODUCTS } from \"../../utils/actions\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_PRODUCTS } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport spinner from \"../../assets/spinner.gif\"\n\nfunction ProductList() {\n const dispatch = useDispatch();\n const state = useSelector(state => state);\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if(data) {\n      dispatch({\n           type: UPDATE_PRODUCTS,\n          products: data.products\n        });\n        data.products.forEach((product) => {\n          idbPromise('products', 'put', product);\n        });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n         products: products\n       });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(product => product.category._id === currentCategory);\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n            {filterProducts().map(product => (\n                <ProductItem\n                  key= {product._id}\n                  _id={product._id}\n                  image={product.image}\n                  name={product.name}\n                  price={product.price}\n                  quantity={product.quantity}\n                />\n            ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      { loading ? \n      <img src={spinner} alt=\"loading\" />: null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_CATEGORIES } from \"../../utils/queries\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    // if categoryData exists or has changed from the response of useQuery, then run dispatch()\n    if (categoryData) {\n      // execute our dispatch function with our action object indicating the type of action and the data to set our state for categories to\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n      categoryData.categories.forEach(category => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if(!loading) {\n      idbPromise('categories', 'get').then(categories => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map(item => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from '../../utils/actions';\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n   const dispatch = useDispatch();\n\n    const onChange = (e) => {\n      const value = e.target.value;\n    \n      if (value === '0') {\n        dispatch({\n          type: REMOVE_FROM_CART,\n          _id: item._id\n        });\n\n        idbPromise('cart', 'delete', { ...item });\n      } else {\n        dispatch({\n          type: UPDATE_CART_QUANTITY,\n          _id: item._id,\n          purchaseQuantity: parseInt(value)\n        });\n\n        idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n      }\n    };\n\n    const removeFromCart = item => {\n    dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n    };\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n            >\n            🗑️\n            </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { QUERY_CHECKOUT } from \"../../utils/queries\"\nimport { idbPromise } from \"../../utils/helpers\"\nimport CartItem from \"../CartItem\";\nimport Auth from \"../../utils/auth\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\nimport \"./style.css\";\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  \n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session })\n      })\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    };\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach(item => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds }\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span\n          role=\"img\"\n          aria-label=\"trash\">🛒</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>[close]</div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map(item => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {\n              Auth.loggedIn() ?\n                <button onClick={submitCheckout}>\n                  Checkout\n              </button>\n                :\n                <span>(log in to check out)</span>\n            }\n          </div>\n        </div>\n      ) : (\n          <h3>\n            <span role=\"img\" aria-label=\"shocked\">\n              😱\n          </span>\n          You haven't added anything to your cart yet!\n          </h3>\n        )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from '../components/Cart';\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useQuery } from '@apollo/react-hooks';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\nimport spinner from '../assets/spinner.gif'\nimport Cart from '../components/Cart';\nimport { idbPromise } from \"../utils/helpers\";\n\nfunction Detail() {\n const dispatch = useDispatch();\n const state = useSelector(state => state);\n  const { id } = useParams();\n  \n  const [currentProduct, setCurrentProduct] = useState({})\n  \n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n  \n  const { products, cart } = state;\n  \n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find(product => product._id === id));\n    } \n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n  \n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n  \n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      // if we're updating quantity, use existing item data and increment purchaseQuantity value by 1\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 }\n      });\n      // if product isn't in the cart yet, add it to the current shopping cart in IndexedDB\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id\n    });\n    // upon removal from cart, delete the item from IndexedDb using the 'currentProduct._id' to locate what to remove\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n  return (\n    <>\n      {currentProduct ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">\n            ← Back to Products\n          </Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>\n            {currentProduct.description}\n          </p>\n\n          <p>\n            <strong>Price:</strong>\n            ${currentProduct.price}\n            {\" \"}\n            <button onClick={addToCart}>Add to cart</button>\n            <button \n              disabled={!cart.find(p => p._id === currentProduct._id)} \n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {\n        loading ? <img src={spinner} alt=\"loading\" /> : null\n      }\n      <Cart />\n    </>\n  );\n};\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import gql from 'graphql-tag';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      } \n      }\n    }\n  }\n`;\n\n\nexport const ADD_USER = gql`\n  mutation addUser($firstName: String!, $lastName: String!, $email: String!, $password: String!) {\n    addUser(firstName: $firstName, lastName: $lastName, email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;","import React, { useState } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport { Link } from \"react-router-dom\";\nimport { LOGIN } from \"../utils/mutations\"\nimport Auth from \"../utils/auth\";\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' })\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({ variables: { email: formState.email, password: formState.password } })\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e)\n    }\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">\n        ← Go to Signup\n      </Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {\n          error ? <div>\n            <p className=\"error-text\" >The provided credentials are incorrect</p>\n          </div> : null\n        }\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from '@apollo/react-hooks';\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email, password: formState.password,\n        firstName: formState.firstName, lastName: formState.lastName\n      }\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">\n        ← Go to Login\n      </Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\n          -Shop-Shop\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import {\n  UPDATE_PRODUCTS,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  ADD_TO_CART,\n  ADD_MULTIPLE_TO_CART,\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from './actions';\n  \nconst initialState = {\n  products: [],\n  categories: [],\n  currentCategory: '',\n  cart: [],\n  cartOpen: false\n};\n  export const reducers = (state = initialState, action) => {\n    switch (action.type) {\n      // if action type value is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\n      case UPDATE_PRODUCTS:\n        return {\n          ...state,\n          products: [...action.products]\n        };\n      // if action type value is the value of `UPDATE_CATEGORIES`, return a new state object with an updated categories array\n      case UPDATE_CATEGORIES:\n        return {\n          ...state,\n          categories: [...action.categories]\n        };\n      case UPDATE_CURRENT_CATEGORY:\n        return {\n            ...state,\n            currentCategory: action.currentCategory\n        };\n      case ADD_TO_CART:\n        return {\n          ...state,\n          cartOpen: true,\n          cart: [...state.cart, action.product]\n        };\n      case ADD_MULTIPLE_TO_CART:\n        return {\n          ...state,\n          cart: [...state.cart, ...action.products],\n        };\n      case REMOVE_FROM_CART:\n        let newState = state.cart.filter(product => {\n          return product._id !== action._id;\n        });\n        \n          return {\n            ...state,\n            cartOpen: newState.length > 0,\n            cart: newState\n          };\n      case UPDATE_CART_QUANTITY:\n          return {\n              ...state,\n              cartOpen: true,\n              cart: state.cart.map(product => {\n                if (action._id === product._id) {\n                  product.purchaseQuantity = action.purchaseQuantity;\n                }\n                return product;\n              })\n            };\n      case CLEAR_CART:\n          return {\n            ...state,\n            cartOpen: false,\n            cart: []\n          };\n      case TOGGLE_CART:\n          return {\n            ...state,\n            cartOpen: !state.cartOpen\n          };\n      default:\n        return state;\n    }\n  };\n\n  export default reducers;","import { createStore } from 'redux';\nimport reducers from './reducers';\n\nexport default createStore(reducers);","import React, { useEffect } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport Jumbotron from \"../components/Jumbotron\";\nimport { ADD_ORDER } from \"../utils/mutations\";\nimport { idbPromise } from \"../utils/helpers\";\n\nfunction Success() {\n    const [addOrder] = useMutation(ADD_ORDER);\n\n        useEffect(() => {\n        async function saveOrder() {\n            const cart = await idbPromise('cart', 'get');\n            const products = cart.map(item => item._id);\n\n            if (products.length) {\n                const { data } = await addOrder({ variables: { products } });\n                const productData = data.addOrder.products;\n              \n                productData.forEach((item) => {\n                  idbPromise('cart', 'delete', item);\n                });\n              }\n\n              setTimeout(() => {\n                  window.location.assign('/');\n              }, 3000);\n        }\n\n        saveOrder();\n        }, [addOrder]);\n    return (\n        <div>\n            <Jumbotron>\n                <h1>Success!</h1>\n                <h2>\n                    Thank you for your purchase!\n                </h2>\n                <h2>\n                    You will now be redirected to the homepage\n                </h2>\n            </Jumbotron>\n        </div>\n    );\n};\n\nexport default Success;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { useQuery } from '@apollo/react-hooks';\nimport { QUERY_USER } from \"../utils/queries\";\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">\n          ← Back to Products\n          </Link>\n\n        {user ? (\n          <>\n            <h2>Order History for {user.firstName} {user.lastName}</h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>{new Date(parseInt(order.purchaseDate)).toLocaleDateString()}</h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img\n                          alt={name}\n                          src={`/images/${image}`}\n                        />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n\n      </div>\n\n    </>)\n\n};\n\nexport default OrderHistory;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\nimport Home from \"./pages/Home\";\nimport Detail from \"./pages/Detail\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Nav from \"./components/Nav\";\nimport { Provider } from 'react-redux';\nimport store from './utils/store';\nimport Success from \"./pages/Success\";\nimport OrderHistory from \"./pages/OrderHistory\";\n\nconst client = new ApolloClient({\n  request: (operation) => {\n    const token = localStorage.getItem('id_token')\n    operation.setContext({\n      headers: {\n        authorization: token ? `Bearer ${token}` : ''\n      }\n    })\n  },\n  uri: '/graphql',\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <Provider store={store}>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/success\" component={Success} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/products/:id\" component={Detail} />\n              <Route component={NoMatch} />\n            </Switch>\n          </Provider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}